apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'


android {

    signingConfigs {
        development_config {
            keyAlias 'devel'
            keyPassword 'cloudwalker'
            storeFile file('cloudwalker.jks')
            storePassword '2256081445'
        }
        production_config {
            keyAlias 'production'
            keyPassword 'cloudwalker'
            storeFile file('cloudwalker.jks')
            storePassword '2256081445'
        }
    }


    compileSdkVersion 27
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "tv.cloudwalker.search"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.production_config
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_URL", '"https://dev-tvapi.cloudwalker.tv/"'
            debuggable true
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            ext.enableCrashlytics = false
            signingConfig signingConfigs.development_config
            zipAlignEnabled true
        }
        lintOptions {
            disable 'GoogleAppIndexingWarning', 'HardcodedText', 'InvalidPackage'
            textReport true
            textOutput "stdout"
            checkReleaseBuilds false
            abortOnError false
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def project = "CDE"
            def SEP = "_"
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def version = variant.versionCode
            def newApkName = project + SEP + buildType + SEP + flavorName + SEP + version + ".apk"
            output.outputFileName = new File("../$buildType", newApkName)
        }
    }
}


protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.7.1' }
    plugins {
        javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.21.0' // CURRENT_GRPC_VERSION
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc { // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:leanback-v17:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'


    // You need to build grpc-java to obtain these libraries below.
    implementation 'io.grpc:grpc-okhttp:1.21.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-protobuf-lite:1.21.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-stub:1.21.0' // CURRENT_GRPC_VERSION
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'


    // json pareser lib
    implementation 'com.github.amirdew:JSON:v1.0.0'

    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.android.support:recyclerview-v7:27.1.1'

    implementation 'com.github.bumptech.glide:glide:3.8.0'

//    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation 'com.crowdfire.cfalertdialog:cfalertdialog:1.1.0'

}
